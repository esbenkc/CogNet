tibble(date=date, entropy=entropy)
}
group_by_pairs <- function(graph) {
graph %>%
activate(edges) %>%
as_tibble() %>%
mutate(pair_key = create_pair_key(to, from)) %>%
group_by(pair_key)
}
calc_friendship_strength <- function(graph) {
graph %>%
group_by_pairs %>%
summarise(pair_weight = sum(weight), date = first(date))
}
calc_gini_per_day <- function(graph) {
graph %>%
calc_friendship_strength %>%
summarise(gini_coef = gini(pair_weight), date = first(date))
}
calc_friendship_strength(test_graph)
full_graph
create_graph <- function(dat) {
vertices <- tibble(name=unique(c(dat$from, dat$to)))
edges <- dat
tbl_graph(vertices, edges, directed = F)
}
calc_entropy <- function(graph_obj) {
metric.degree.entropy(from.igraph(graph_obj))
}
get_edge_date <- function(g) {
g %>%
activate(edges) %>%
distinct(date) %>%
pull()
}
entropy_per_date <- function(graph) {
entropy <- calc_entropy(graph)
date <- get_edge_date(graph)
tibble(date=date, entropy=entropy)
}
group_by_pairs <- function(graph) {
graph %>%
activate(edges) %>%
as_tibble() %>%
mutate(pair_key = create_pair_key(to, from)) %>%
group_by(pair_key, date)
}
calc_friendship_strength <- function(graph) {
graph %>%
group_by_pairs %>%
summarise(pair_weight = sum(weight))
}
calc_gini_per_day <- function(graph) {
graph %>%
calc_friendship_strength %>%
summarise(gini_coef = gini(pair_weight), date = first(date))
}
full_graph %>%
calc_friendship_strength()
full_graph %>%
group_by_pairs()
graph <- full_graph
graph %>%
activate(edges) %>%
as_tibble()
graph %>%
activate(edges) %>%
as_tibble() %>%
mutate(pair_key = create_pair_key(to, from))
pair_df <- add_pairs(full_graph)
create_graph <- function(dat) {
vertices <- tibble(name=unique(c(dat$from, dat$to)))
edges <- dat
tbl_graph(vertices, edges, directed = F)
}
calc_entropy <- function(graph_obj) {
metric.degree.entropy(from.igraph(graph_obj))
}
get_edge_date <- function(g) {
g %>%
activate(edges) %>%
distinct(date) %>%
pull()
}
entropy_per_date <- function(graph) {
entropy <- calc_entropy(graph)
date <- get_edge_date(graph)
tibble(date=date, entropy=entropy)
}
create_pair_key <- function(a, b) {
apply(cbind(a, b), 1, function(x) paste(sort(x), collapse=" "))
}
add_pairs <- function(graph) {
graph %>%
activate(edges) %>%
as_tibble() %>%
mutate(pair_key = create_pair_key(to, from))
}
calc_friendship_strength <- function(graph) {
graph %>%
add_pairs %>%
group_by(pair_key, date) %>%
summarise(pair_weight = sum(weight))
}
calc_gini_per_day <- function(graph) {
graph %>%
calc_friendship_strength %>%
summarise(gini_coef = gini(pair_weight), date = first(date))
}
pair_df <- add_pairs(full_graph)
pair_df
pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight))
pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date))
pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
ggplot(aes(friendship)) %>%
geom_histogram()
pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
ggplot(aes(friendship)) +
geom_histogram()
pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
ggplot(aes(log(friendship))) +
geom_histogram()
pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
ggplot(aes(log(friendship))) +
geom_density()
log(10)
log(1)
log(2)
friendship_df <- pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date))
friendship_df
pacman::p_load(tidyverse, tidygraph, fastnet, lubridate, reldist, pracma)
friendship_df %>%
mutate(ema_friendship = pracma::movavg(friendship, 4, type = "e"))
# exponentially weighted moving average (adapted from https://stackoverflow.com/a/42774577/10524429)
ewma.filter <- function (x, ratio=0.9) {
ewma_vec <- c(stats::filter(x * ratio, 1 - ratio, "recursive", init = x[1]))
}
# gets only last (for summarise)
ewma.filter.last <- function (x, ratio=0.9) {
ewma_vec <- ewma.filter(x, ratio)
ewma_vec[length(ewma_vec)]
}
ewma.filter(c(1, 2, 3, 4))
# exponentially weighted moving average (adapted from https://stackoverflow.com/a/42774577/10524429)
ewma.filter <- function (x, ratio=0.9) {
c(stats::filter(x * ratio, 1 - ratio, "recursive", init = x[1]))
}
ewma.filter(c(1, 2, 3, 4))
ewma.filter(c(1, 2, 3, 4), ratio=0.1)
ewma.filter(c(1, 2, 3, 4), ratio=0.99)
friendship_df
friendship_df %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship))
friendship_df %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.8))
friendship_df %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.8)) %>%
ggplot(aes(x=ewma_friendship)) %>%
geom_density()
friendship_df %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.8)) %>%
ggplot(aes(x=ewma_friendship)) +
geom_density()
friendship_df %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.8)) %>%
ggplot(aes(x=log(ewma_friendship))) +
geom_density()
friendship_df %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.9)) %>%
ggplot(aes(x=log(ewma_friendship))) +
geom_density()
friendship_df %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.95)) %>%
ggplot(aes(x=log(ewma_friendship))) +
geom_density()
friendship_df <- pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.95),
log_ewma_friend = log(ewma_friendship))
friendship_df <- pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.95),
log_ewma_friend = log(ewma_friendship)) %>%
ungroup()
friendship_df
density(friendship_df$log_ewma_friend)
ts(density(friendship_df$log_ewma_friend))
ewma_dens <- ts(density(friendship_df$log_ewma_friend))
pacman::p_load(tidyverse, tidygraph, fastnet, lubridate, reldist, pracma, pastecs)
turnpoints(ewma_dens)
ewma_dens <- ts(density(friendship_df$log_ewma_friend, bw="sj"))
turnpoints(ewma_dens)
log(2)
friendship_df <- pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.95),
log_ewma_friend = log(ewma_friendship)) %>%
ungroup() %>%
mutate(is_friend = ewma_friendship > log(2))
friendship_df
friendship_df <- pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.95),
log_ewma_friend = log(ewma_friendship)) %>%
ungroup() %>%
mutate(is_friend = log_ewma_friendship > log(2))
friendship_df <- pair_df %>%
dplyr::group_by(pair_key, date) %>%
summarise(friendship = sum(weight)) %>%
mutate(date = as.Date(date)) %>%
group_by(pair_key) %>%
mutate(ewma_friendship = ewma.filter(friendship, ratio=0.95),
log_ewma_friend = log(ewma_friendship)) %>%
ungroup() %>%
mutate(is_friend = log_ewma_friend > log(2))
friendship_df
friendship_df %>%
group_by(pair_key) %>%
summarise(mean(is_friend))
View(ewma_dens)
View(friendship_df)
friendship_df
test_pair <- friendship_df %>%
filter(pair_key == "1 11")
View(test_pair)
test_pair <- friendship_df %>%
filter(pair_key == "1 12")
test_pair
test_pair %>%
mutate(lag(is_friend))
?lag
test_pair %>%
mutate(lag(is_friend) + lag(is_friend, n=2))
test_pair %>%
mutate(lag(is_friend) + lag(is_friend, n=2) + lag(is_friend, n=3))
test_pair %>%
mutate(previous_streak = lag(is_friend) + lag(is_friend, n=2) + lag(is_friend, n=3),
next_streak = is_friend + lead(is_friend) + lead(is_friend, n=2))
test_pair %>%
mutate(previous_streak = lag(is_friend) + lag(is_friend, n=2) + lag(is_friend, n=3),
next_streak = is_friend + lead(is_friend) + lead(is_friend, n=2),
friend_ratio = next_streak / previous_streak)
test_pair %>%
mutate(previous_streak = lag(is_friend) + lag(is_friend, n=2) + lag(is_friend, n=3) + lag(is_friend, n=4),
next_streak = is_friend + lead(is_friend) + lead(is_friend, n=2) + lead(is_friend, n=3),
friend_ratio = next_streak / previous_streak)
test_pair %>%
mutate(previous_streak = lag(is_friend) + lag(is_friend, n=2) + lag(is_friend, n=3) + lag(is_friend, n=4),
next_streak = is_friend + lead(is_friend) + lead(is_friend, n=2) + lead(is_friend, n=3),
friend_ratio = next_streak / previous_streak,
new_connection = friend_ratio >= 3)
test_pair %>%
mutate(
previous_streak = lag(is_friend) + lag(is_friend, n = 2) + lag(is_friend, n = 3) + lag(is_friend, n = 4),
next_streak = is_friend + lead(is_friend) + lead(is_friend, n = 2) + lead(is_friend, n = 3),
friend_ratio = next_streak / previous_streak,
new_connection = friend_ratio >= 3,
lost_connection = previous_streak == 0
)
test_pair %>%
mutate(
previous_streak = lag(is_friend) + lag(is_friend, n = 2) + lag(is_friend, n = 3) + lag(is_friend, n = 4),
next_streak = is_friend + lead(is_friend) + lead(is_friend, n = 2) + lead(is_friend, n = 3),
friend_ratio = next_streak / previous_streak,
new_connection = friend_ratio >= 3,
lost_connection = (previous_streak == 0) & !new_connection
)
test_pair %>%
mutate(
previous_streak = lag(is_friend) + lag(is_friend, n = 2) + lag(is_friend, n = 3) + lag(is_friend, n = 4),
next_streak = is_friend + lead(is_friend) + lead(is_friend, n = 2) + lead(is_friend, n = 3),
friend_ratio = next_streak / previous_streak,
new_connection = (friend_ratio >= 3) & next_streak > 1,
lost_connection = (previous_streak == 0) & !new_connection
)
add_connection_logic <- function(friendship_df) {
friendship_df %>%
mutate(
previous_streak = lag(is_friend) + lag(is_friend, n = 2) + lag(is_friend, n = 3) + lag(is_friend, n = 4),
next_streak = is_friend + lead(is_friend) + lead(is_friend, n = 2) + lead(is_friend, n = 3),
friend_ratio = next_streak / previous_streak,
new_connection = (friend_ratio >= 3) & next_streak > 1,
lost_connection = (previous_streak == 0) & !new_connection
) %>%
select(-c(previous_streak, next_streak, friend_ratio))
}
friendship_df %>%
add_connection_logic
friendship_df %>%
group_by(pair_key) %>%
add_connection_logic
friendship_df %>%
group_by(pair_key) %>%
add_connection_logic %>%
group_by(date) %>%
summarise(num_new_friends = sum(new_connection))
friendship_df %>%
group_by(pair_key) %>%
add_connection_logic %>%
group_by(date) %>%
summarise(num_new_friends = sum(new_connection, na.rm = T))
new_cons <- friendship_df %>%
group_by(pair_key) %>%
add_connection_logic %>%
group_by(date) %>%
summarise(num_new_friends = sum(new_connection, na.rm = T))
new_cons %>%
ggplot(aes(x=date, y=num_new_friends)) +
geom_line()
new_cons %>%
ggplot(aes(x=date, y=num_new_friends)) +
geom_line() +
geom_vline(xintercept=as.Date("2020-03-11"), colour="red") +
new_cons %>%
ggplot(aes(x=date, y=num_new_friends)) +
geom_line() +
geom_vline(xintercept=as.Date("2020-03-11"), colour="red")
new_cons %>%
ggplot(aes(x=date, y=num_new_friends)) +
geom_line() +
geom_vline(xintercept=as.Date("2020-03-11"), colour="red")
friendship_df %>%
group_by(pair_key) %>%
add_connection_logic
con_df <- friendship_df %>%
group_by(pair_key) %>%
add_connection_logic
View(con_df)
con_df
new_cons <- con_df %>%
group_by(date) %>%
summarise(num_new_friends = sum(new_connection, na.rm=T))
new_cons
lock_date <- as.Date("2020-03-13")
new_cons %>%
filter(between(date, as.Date("2020-02-01"), lock_date))
new_cons %>%
filter(between(date, as.Date("2020-02-01"), lock_date)) %>%
pull(num_new_friends)
new_cons %>%
filter(between(date, as.Date("2020-01-01"), lock_date)) %>%
pull(num_new_friends) %>%
new_cons %>%
filter(between(date, as.Date("2020-01-01"), lock_date)) %>%
pull(num_new_friends) %>%
ts %>%
pracma::ApEn()
pracma
sessionInfo()
new_cons %>%
filter(between(date, as.Date("2020-01-01"), lock_date)) %>%
pull(num_new_friends) %>%
ts %>%
pracma::approx_entropy()
new_cons %>%
filter(between(date, lock_date, as.Date("2020-06-08")))
new_cons %>%
filter(between(date, lock_date, as.Date("2020-06-08"))) %>%
pull(num_new_friends) %>%
ts %>%
pracma::approx_entropy()
new_cons %>%
filter(between(date, as.Date("2020-01-01"), lock_date)) %>%
pull(num_new_friends) %>%
ts %>%
pracma::approx_entropy()
new_cons %>%
filter(between(date, lock_date, as.Date("2020-06-08"))) %>%
pull(num_new_friends) %>%
ts %>%
pracma::approx_entropy()
intro_interval <- interval(ymd("2019-09-01"), ymd("2020-01-14"))
second_sem <- interval(ymd("2020-02-03", lock_date))
intro_interval <- interval(ymd("2019-09-01"), ymd("2020-01-14"))
second_sem <- interval(ymd("2020-02-03", lock_date))
first_lockdown <- interval(lock_date, ymd("2020-06-08"))
third_sem <- interval(ymd("2020-08-31"), ymd("2021-01-04"))
df %>%
filter(date %within% intervalos) %>%
pull(num_new_friends) %>%
ts %>%
pracma::approx_entropy
entropy_in_interval <- function(df, intervalos) {
df %>%
filter(date %within% intervalos) %>%
pull(num_new_friends) %>%
ts %>%
pracma::approx_entropy
}
entropy_in_interval(new_cons, intro_interval)
entropy_in_interval <- function(df, intervalos) {
df %>%
filter(date %within% intervalos) %>%
pull(num_new_friends) %>%
ts %>%
pracma::approx_entropy()
}
entropy_in_interval(new_cons, intro_interval)
entropy_in_interval(new_cons, second_sem)
intro_interval <- interval(ymd("2019-09-01"), ymd("2020-01-14"))
second_sem <- interval(ymd("2020-02-03", ymd("2020-03-13")))
first_lockdown <- interval(ymd("2020-03-13"), ymd("2020-06-08"))
third_sem <- interval(ymd("2020-08-31"), ymd("2021-01-04"))
entropy_in_interval(new_cons, intro_interval)
entropy_in_interval(new_cons, second_sem)
second_sem
intro_interval
second_sem <- interval(ymd("2020-02-03"), ymd("2020-03-13"))
entropy_in_interval(new_cons, second_sem)
entropy_in_interval(new_cons, intro_interval)
entropy_in_interval(new_cons, second_sem)
entropy_in_interval(new_cons, first_lockdown)
entropy_in_interval(new_cons, third_sem)
new_cons %>%
filter(date %within% third_sem)
new_cons %>%
ggplot(aes(x=date, y=num_new_friends)) +
geom_line() +
geom_vline(xintercept=as.Date("2020-03-11"), colour="red")
new_cons
third_sem <- interval(ymd("2020-08-31"), ymd("2020-12-31"))
entropy_in_interval(new_cons, third_sem)
entropy_in_interval(new_cons, intro_interval)
entropy_in_interval(new_cons, second_sem)
entropy_in_interval(new_cons, first_lockdown)
entropy_in_interval(new_cons, second_sem)
entropy_in_interval(new_cons, first_lockdown)
entropy_in_interval(new_cons, third_sem)
entropy_in_interval(new_cons, intro_interval)
entropy_in_interval(new_cons, second_sem)
new_cons %>%
ggplot(aes(x=date, y=num_new_friends)) +
geom_line() +
geom_vline(xintercept=as.Date("2020-03-11"), colour="red")
## CHANGE UNIT HERE
unit="day"
dat <- rawdat %>%
mutate(timestamp = lubridate::as_datetime(timestamp/1000),
date = round_date(timestamp, unit=unit),
from = as.character(from),
to = as.character(to)) %>%
filter(from!=to)
graph_list <- dat %>%
group_split(date) %>%
map(create_graph)
entropy_df <- graph_list %>%
map_dfr(entropy_per_date)
entropy_df %>%
mutate(date = as.Date(date)) %>%
ggplot(aes(x=date, y=entropy)) +
geom_line() +
geom_vline(xintercept=as.Date("2020-03-11"), colour="red") +
geom_smooth() +
theme_minimal()
gini_df <- graph_list %>%
map_dfr(calc_gini_per_day)
gini_df <- graph_list %>%
map_dfr(calc_gini_per_day)
gini_df %>%
mutate(date = as.Date(date)) %>%
ggplot(aes(x=date, y=gini_coef)) +
geom_line() +
geom_vline(xintercept=as.Date("2020-03-11"), colour="red") +
geom_smooth() +
theme_minimal()
k
k
k
k
k
k
print("hello world")
print("jek")
